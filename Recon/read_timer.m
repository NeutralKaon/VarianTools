function [out, commentLines]= read_timer(dn)
%Load a timestamp file created by ppoller. 
%
%Input: Directory containing a 'timestamp' file
%Output: Approximately nscan-long vector of scans timestamps.
%
%Warnings are generated by the hardware if there is a /chance/ that a scan
%might have been missed. The lines in the original file where such comments
%are is returned in 'commentLines'. 
%
%JM '14 

delimiter = ' ';
if nargin<=2
    startRow = 2;
    endRow = inf;
end
formatSpec = '%*s%*s%*s%*s%f%*s%*s%*s%[^\n\r]'; %Read in numbers at the right place (column five)

filename=fullfile([dn '/timestamp']);
fileID = fopen(filename,'r');


dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'CommentStyle', '#');

for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    dataArray{1} = [dataArray{1};dataArrayBlock{1}];
end

% Close the text file.
fclose(fileID);

% %Now scan to find out where scans *may* have been missed 
 fileID = fopen(filename,'r');

 tline = fgetl(fileID);
 i=length(dataArray{:,1}); %Length of data in file, as recorded above. 
 commentOut=cell(1,i); 
 
 i=1;
 
 while(ischar(tline))
     if strcmp(tline(1),'#') 
        commentOut{i}=tline; 
     end
     i=i+1;
     tline=fgetl(fileID);
 end
 
 fclose(fileID);

 commentLines=find(~cellfun(@isempty,commentOut)); %Location in the file of warnings 

% Reshape data
out = dataArray{:, 1};

% Ensure that it's monotonic and starts at zero 

out=sort(out); %Cheating
out=out-min(out); 

